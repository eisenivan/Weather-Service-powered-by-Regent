{"version":3,"file":"regent.module.js","sources":["../src/private/is-rule.js","../src/private/is-escaped.js","../src/private/is-lookup.js","../src/private/strip-at.js","../src/private/make-args.js","../src/functions/make.js","../src/functions/deep-equals.js","../src/functions/empty.js","../src/functions/equals.js","../src/functions/every.js","../src/functions/greater-than-equals.js","../src/functions/greater-than.js","../src/functions/includes.js","../src/functions/less-than-equals.js","../src/functions/less-than.js","../src/functions/or.js","../src/functions/regex.js","../src/functions/some.js","../src/functions/type-of.js","../src/regent.js","../src/functions/and.js","../src/functions/none.js","../src/functions/not.js","../src/functions/xor.js"],"sourcesContent":["export default testRule => typeof testRule === 'function'\n","const isEscapedRegex = /^@@/\nexport default arg => isEscapedRegex.test(arg)\n","import isEscaped from './is-escaped'\n\nconst isLookupRegex = /^@/\n\nexport default function isLookup (arg) {\n  // If it's an escaped string then it's not a lookup?\n  if (isEscaped(arg)) {\n    return false\n  }\n  // If it makes it to here and it matches the following regex then it is a lookup.\n  return isLookupRegex.test(arg)\n}\n","export default function stripAt (arg) {\n  return typeof arg === 'string' && arg[0] === '@'\n    ? arg.slice(1)\n    : arg\n}\n","import get from 'lodash.get'\nimport isLookup from './is-lookup'\nimport stripAt from './strip-at'\n\n// makeArgs will sort out if the leftArg and rightArg are lookups or\n// static and return the the data that your predicates needs.\nexport default (data, ...args) => args.map(x => isLookup(x) ? get(data, stripAt(x)) : stripAt(x))\n","import makeArgs from '../private/make-args'\n\nexport default (fn) => {\n  if (typeof fn !== 'function') {\n    throw new Error('make must be passed a function as argument 1')\n  }\n\n  return (...args) =>\n    data =>\n      fn(...makeArgs(data, ...args), data)\n}\n","import isEqual from 'lodash.isequal'\nimport make from './make'\n\nexport const deepEqualsFn = (left, right) => isEqual(left, right)\n\nexport default make(deepEqualsFn)\n","import make from './make'\n\nexport const emptyFn = input => (\n  input === undefined ||\n  input === null ||\n  input === 'undefined' ||\n  input === ''\n)\n\nexport default make(emptyFn)\n","import make from './make'\n\nexport const equalsFn = (left, right) => left === right\n\nexport default make(equalsFn)\n","import assign from 'lodash.assign'\nimport isarray from 'lodash.isarray'\nimport isRule from '../private/is-rule'\nimport make from './make'\n\nexport const everyFn = (left, right, data) => {\n  if (!isRule(right)) {\n    throw new Error('Regent: the right property of an every rule must be a regent rule')\n  }\n\n  if (!isarray(left)) {\n    return false\n  }\n\n  return left.every(x => right(assign({}, data, { __: x })))\n}\n\nexport default make(everyFn)\n","import make from './make'\n\nexport const greaterThanOrEqualsFn = (left, right) => left >= right\n\nexport default make(greaterThanOrEqualsFn)\n","import make from './make'\n\nexport const greaterThanFn = (left, right) => left > right\n\nexport default make(greaterThanFn)\n","import _includes from 'lodash.includes'\nimport make from './make'\n\nexport const includesFn = (left, right) => _includes(left, right)\n\nexport default make(includesFn)\n","import make from './make'\n\nexport const lessThanOrEqualsFn = (left, right) => left <= right\nexport default make(lessThanOrEqualsFn)\n","import make from './make'\n\nexport const lessThanFn = (left, right) => left < right\nexport default make(lessThanFn)\n","import isRule from '../private/is-rule'\n\nexport default (...rules) => {\n  // throw if one or more of the rules are\n  // not rules\n  if (!rules.every(x => isRule(x))) {\n    throw new Error('Regent: or requires all arguments to be a function')\n  }\n\n  return data => rules.some(x => x(data))\n}\n","import make from './make'\n\nexport const regexFn = (left, right) => right.test(left)\nexport default make(regexFn)\n","import assign from 'lodash.assign'\nimport isarray from 'lodash.isarray'\nimport isRule from '../private/is-rule'\nimport make from './make'\n\nexport const someFn = (left, right, data, custom) => {\n  if (!isRule(right)) {\n    throw new Error('Regent: the right property of an every rule must be a regent rule')\n  }\n\n  if (!isarray(left)) {\n    return false\n  }\n\n  return left.some(x => right(assign({}, data, { __: x })))\n}\n\nexport default make(someFn)\n","import make from './make'\n\nexport const typeOfFn = (left, right) => typeof left === right; // eslint-disable-line\nexport default make(typeOfFn)\n","import and from './functions/and'\nimport deepEquals from './functions/deep-equals'\nimport empty from './functions/empty'\nimport equals from './functions/equals'\nimport every from './functions/every'\nimport greaterThanOrEquals from './functions/greater-than-equals'\nimport greaterThan from './functions/greater-than'\nimport includes from './functions/includes'\nimport lessThanOrEquals from './functions/less-than-equals'\nimport lessThan from './functions/less-than'\nimport make from './functions/make'\nimport none from './functions/none'\nimport not from './functions/not'\nimport or from './functions/or'\nimport regex from './functions/regex'\nimport some from './functions/some'\nimport typeOf from './functions/type-of'\nimport xor from './functions/xor'\n\nexport default {\n  and,\n  deepEquals,\n  empty,\n  equals,\n  every,\n  greaterThanOrEquals,\n  greaterThan,\n  includes,\n  lessThanOrEquals,\n  lessThan,\n  make,\n  none,\n  not,\n  or,\n  regex,\n  some,\n  typeOf,\n  xor\n}\n","import isRule from '../private/is-rule'\n\nexport default (...rules) => {\n  // throw if one or more of the rules are\n  // not rules\n  if (!rules.every(x => isRule(x))) {\n    throw new Error('Regent: and requires all arguments to be a function')\n  }\n\n  return data => rules.every(x => x(data))\n}\n","import or from './or'\nimport isRule from '../private/is-rule'\n\nexport default (...rules) => {\n  if (!rules.every(x => isRule(x))) {\n    throw new Error('Regent: none requires all arguments to be a function')\n  }\n\n  return data => !or(...rules)(data)\n}\n","import isRule from '../private/is-rule'\n\nexport default (rule) => {\n  if (!isRule(rule)) {\n    throw new Error('Regent: not requires the first argument to be a function')\n  }\n\n  return data => !rule(data)\n}\n","import isRule from '../private/is-rule'\n\nexport default (...rules) =>\n  (data) => {\n  // throw if one or more of the rules are\n  // not rules\n    if (!rules.every(x => isRule(x))) {\n      throw new Error('Regent: xor requires all arguments to be a function')\n    }\n\n    if (rules.length !== 2) {\n      throw Error('Regent: xor must take exactly 2 rules')\n    }\n\n    return (rules[0](data) || rules[1](data)) && !(rules[0](data) && rules[1](data))\n  }\n"],"names":["testRule","isEscapedRegex","isLookupRegex","stripAt","arg","slice","fn","Error","data","args","map","x","test","isEscaped","get","make","left","right","isEqual","input","isRule","isarray","every","assign","__","_includes","rules","some","custom","deepEquals","empty","equals","greaterThanOrEquals","greaterThan","includes","lessThanOrEquals","lessThan","or","rule","regex","typeOf","length"],"mappings":"kJAAA,eAAeA,SAAgC,mBAAbA,GCA5BC,EAAiB,MCEjBC,EAAgB,KCFP,SAASC,EAASC,SACT,iBAARA,GAA+B,MAAXA,EAAI,GAClCA,EAAIC,MAAM,GACVD,ECGN,eCJgBE,MACI,mBAAPA,QACH,IAAIC,MAAM,yIAIhBC,UACEF,wBDHUE,wEAAkBC,EAAKC,aAAIC,mBHL5BP,UAAOH,EAAeW,KAAKR,GCKpCS,CAF4BT,EEEuBO,IFIhDT,EAAcU,KAAKR,GEJkCU,EAAIN,EAAML,EAAQQ,IAAMR,EAAQQ,GFF/E,IAAmBP,mBGKbI,UAASC,YAAOD,UCJtBO,WAFcC,EAAMC,UAAUC,EAAQF,EAAMC,OCM5CF,WAPQI,UACrBA,MAAAA,GAEU,cAAVA,GACU,KAAVA,MCFaJ,WAFUC,EAAMC,UAAUD,IAASC,MCenCF,WAZSC,EAAMC,EAAOT,OAC9BY,EAAOH,SACJ,IAAIV,MAAM,6EAGbc,EAAQL,IAINA,EAAKM,eAAMX,UAAKM,EAAMM,EAAO,GAAIf,EAAM,CAAEgB,GAAIb,WCVvCI,WAFuBC,EAAMC,UAAUD,GAAQC,MCE/CF,WAFeC,EAAMC,UAAUD,EAAOC,MCGtCF,WAFYC,EAAMC,UAAUQ,EAAUT,EAAMC,OCA5CF,WADoBC,EAAMC,UAAUD,GAAQC,MCC5CF,WADYC,EAAMC,UAAUD,EAAOC,4ECG3CS,EAAMJ,eAAMX,UAAKS,EAAOT,WACrB,IAAIJ,MAAM,sEAGXC,UAAQkB,EAAMC,cAAKhB,UAAKA,EAAEH,SCNpBO,WADSC,EAAMC,UAAUA,EAAML,KAAKI,OCepCD,WAZQC,EAAMC,EAAOT,EAAMoB,OACnCR,EAAOH,SACJ,IAAIV,MAAM,6EAGbc,EAAQL,IAINA,EAAKW,cAAKhB,UAAKM,EAAMM,EAAO,GAAIf,EAAM,CAAEgB,GAAIb,WCXtCI,WADUC,EAAMC,iBAAiBD,IAASC,kBCiB1C,2ECdRS,EAAMJ,eAAMX,UAAKS,EAAOT,WACrB,IAAIJ,MAAM,uEAGXC,UAAQkB,EAAMJ,eAAMX,UAAKA,EAAEH,kBDYlCqB,QACAC,SACAC,QACAT,sBACAU,cACAC,WACAC,mBACAC,WACAC,OACArB,6EE1BKW,EAAMJ,eAAMX,UAAKS,EAAOT,WACrB,IAAIJ,MAAM,wEAGXC,UAAS6B,eAAMX,EAANW,CAAa7B,kBCNf8B,OACTlB,EAAOkB,SACJ,IAAI/B,MAAM,4EAGXC,UAAS8B,EAAK9B,QH0BrB6B,QACAE,OACAZ,SACAa,wFIjCChC,OAGMkB,EAAMJ,eAAMX,UAAKS,EAAOT,WACrB,IAAIJ,MAAM,0DAGG,IAAjBmB,EAAMe,aACFlC,MAAM,gDAGNmB,EAAM,GAAGlB,IAASkB,EAAM,GAAGlB,OAAYkB,EAAM,GAAGlB,IAASkB,EAAM,GAAGlB"}