!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e=e||self).regent={})}(this,function(e){var r=e=>"function"==typeof e||"boolean"==typeof e,t=(e,t)=>{if(r(e))return"function"==typeof e?e(t):e;throw new Error(`Regent: "${e}" is not a valid rule`)};function n(e,r,t){const n={[t]:[]};return r.forEach(e=>{n[t].push("boolean"==typeof e?e:JSON.parse(e.toJson()))}),e.toJson=()=>JSON.stringify(n),e}var o=(...e)=>{if(!e.every(e=>r(e)))throw new Error("Regent: and requires all arguments to be a function");return n(function(r){return e.every(e=>t(e,r))},e,"and")};const a=(e,r)=>(e||(e={}),(e=e[(r=Array.isArray(r)?r:`${r}`.replace(/\[['"]?([\w\d-]+)['"]?\]/g,".$1").split(".").filter(e=>e))[0]])&&r.length>1?a(e,r.slice(1)):e),s=/^@@/,u=/^@/;function i(e){return"@"===e[0]?e.slice(1):e}var f=(e,...r)=>r.map(r=>{return!(e=>s.test(e))(t=r)&&u.test(t)?a(e,i(r)):i(r);var t}),c=(e,r)=>{if("function"!=typeof e)throw new Error("make must be passed a function as argument 1");return r&&"string"==typeof r||(r="unknown"),(...t)=>{const n={[r]:[]};t.forEach(e=>{n[r].push(e)});const o=r=>e(...f(r,...t),r);return o.toJson=()=>JSON.stringify(n),o}},l=c(e=>null==e||"undefined"===e||""===e,"empty"),p=c((e,r)=>e===r,"equals"),y=(e,r)=>{if("function"!=typeof e)throw new Error("makeWithContext must be passed a function as argument 1");return(t,n,o="__")=>{const a=r=>e(...f(r,t,n),o,r);return a.toJson=()=>{let e;return e="boolean"==typeof n?{[r]:[t,n]}:{[r]:[t,JSON.parse(n.toJson())]},JSON.stringify(e)},a}},g=y((e,n,o,a)=>{if(!r(n))throw new Error("Regent: the right property of an every rule must be a regent rule");return!!Array.isArray(e)&&e.every(e=>t(n,{...a,[o]:e}))},"every"),h=c((e,r)=>e>=r,"greaterThanOrEquals"),m=c((e,r)=>e>r,"greaterThan"),w=c((e,r)=>e<=r,"lessThanOrEquals"),d=c((e,r)=>e<r,"lessThan"),E=(...e)=>{if(!e.every(e=>r(e)))throw new Error("Regent: or requires all arguments to be a function");return n(function(r){return e.some(e=>t(e,r))},e,"or")},v=(...e)=>{if(!e.every(e=>r(e)))throw new Error("Regent: none requires all arguments to be a function");return n(function(r){return!E(...e)(r)},e,"none")},O=e=>{if(!r(e))throw new Error("Regent: not requires the first argument to be a function");return n(function(r){return!t(e,r)},[e],"not")},b=c((e,r)=>r.test(e),"regex"),q=y((e,n,o="__",a)=>{if(!r(n))throw new Error("Regent: the right property of an every rule must be a regent rule");return!!Array.isArray(e)&&e.some(e=>t(n,{...a,[o]:e}))},"some"),x=c((e,r)=>typeof e===r,"typeOf"),T=(...e)=>{if(!e.every(e=>r(e)))throw new Error("Regent: xor requires all arguments to be a function");if(2!==e.length)throw Error("Regent: xor must take exactly 2 rules");return n(function(r){return(t(e[0],r)||t(e[1],r))&&!(t(e[0],r)&&t(e[1],r))},e,"xor")};const J=l,R=p,k=g,A=h,N=m,S=w,$=d,_=c,j=v,C=O,W=E,z=b,B=q,D=x,F=T;e.and=o,e.empty=J,e.equals=R,e.every=k,e.filter=(e,n)=>e.filter(e=>!!r(e.rule)&&t(e.rule,n)),e.find=(e,n)=>e.find(e=>!!r(e.rule)&&t(e.rule,n)),e.greaterThan=N,e.greaterThanOrEquals=A,e.lessThan=$,e.lessThanOrEquals=S,e.make=_,e.none=j,e.not=C,e.or=W,e.parse=(e={})=>{const r={};try{const t=JSON.parse(e);Object.keys(t).forEach(e=>{r[e]=function e(r){if("boolean"==typeof r)return r;const t="string"==typeof r?r:Object.keys(r)[0];switch(t){case"empty":return l(...r[t]);case"equals":return p(...r[t]);case"greaterThanOrEquals":return h(...r[t]);case"greaterThan":return m(...r[t]);case"lessThanOrEquals":return w(...r[t]);case"lessThan":return d(...r[t]);case"regex":return b(r[t][0],new RegExp(r[t][1]));case"typeOf":return x(...r[t]);case"and":return o(...r[t].map(r=>e(r)));case"every":return g(r[t][0],e(r[t][1]));case"none":return v(...r[t].map(r=>e(r)));case"not":return O(...r[t].map(r=>e(r)));case"or":return E(...r[t].map(r=>e(r)));case"some":return q(r[t][0],e(r[t][1]));case"xor":return T(...r[t].map(r=>e(r)));default:return`${t} is not a valid predicate`}}(t[e])})}catch(e){console.error(`regent.parse ${e}`)}return r},e.regex=z,e.some=B,e.typeOf=D,e.xor=F});
//# sourceMappingURL=regent.umd.js.map
